TODO
> add zero-div fitness
> log per generation
> set convergence threshold
> paralel fitness calculation using scoop, try first with getInRangeFitness
> try another evo algorithm, besides easimple()
> try constraint handling
> precompute a,b,c,d
> solve gramTr vs gramTe in svm scikit-learn
> what if rankRecall is not independent?
> keep random's seed for later reproduction
> why is pDiv everywhere?

DONE
--> use random.seed(seed)
use both random.seed() and numpy.random.seed()
--> use FitnessMulti
should be avoided, not really know how it works
--> use standard evo algorithm provided in deap
--> how to normalize rank of nRecall
same individuals should get same scores
use scipy.stats.percentileofscore? only from unique individual